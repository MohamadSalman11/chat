{"mappings":"A;;;;C,G,C,S,M,E,O;I,O,Y,Y,O,W,c,O,O,G,Y,O,W,c,O,G,G,O,W,C,S,O,e,c,a,U,M,O,E,G,S;A,C,E,I,E;I;I,S,Q,G;Q;Q,O,U,c,O,U,Y,O,O,Q,G,S,G;Y,O,O;Q,I,S,G;Y,O,O,c,O,U,I,W,K,U,Q,O,S,G,W,O;Q,G,Q;I;I,S,gB,Q,E,W;Q,I,C,C,oB,W,G,M,I,U;I;I,S,kB,M,E,K;Q,I,I,I,G,I,M,M,E,I;Y,I,a,K,C,E;Y,W,U,G,W,U,I;Y,W,Y,G;Y,I,W,Y,W,Q,G;Y,O,c,C,Q,e,W,G,G;Q;I;I,S,a,W,E,U,E,W;Q,I,Y,kB,Y,S,E;Q,I,a,kB,a;Q,O,c,C,a,a;Y,U;Q;Q,O;I;I,S;Q,W,O,M,G,O,M,C,I,K,S,M;Y,I,I,I,G,I,U,M,E,I;gB,I,S,S,C,E;gB,I,I,O,O,I,O,S,C,c,C,I,C,Q,M,M,C,I,G,M,C,I;Y;Y,O;Q;Q,O,S,K,C,I,E;I;I,S,U,Q,E,U;Q,I,O,e,c,e,M,M,I,U;Q,S,S,G,O,M,C,c,W,S,E;Y,a;gB,O;gB,U;gB,c;Y;Q;Q,O,c,C,U,a;Y,U;Q;Q,I,Y,gB,U;I;I,S,gB,C;Q,kB,O,c,G,O,c,C,I,K,S,gB,C;Y,O,E,S,I,O,c,C;Q;Q,O,gB;I;I,S,gB,C,E,C;Q,kB,O,c,G,O,c,C,I,K,S,gB,C,E,C;Y,E,S,G;Y,O;Q;Q,O,gB,G;I;I,S;Q,I,O,Y,e,C,Q,S,E,O;Q,I,Q,S,C,I,E,O;Q,I,O,U,Y,O;Q,I;Y,Q,S,C,O,C,I,C,Q,S,C,S,E,E,Y;Y,O;Q,E,O,G;Y,O;Q;I;I,S,W,M,E,I,E,K;Q,I,6B,a,Q,S,C,I;a,a,S,W,M,E,I,E,K;Y,I,I;gB;a;Y,E,I,C,K,C,G;Y,I,c,S,I,C,K,C,Q;Y,I,W,I;Y,I,O,gB,U,M,S;Y,O;Q;Q,O,W,K,C,M;I;I,S,kB,E;Q,O,S,Q,C,I,C,I,O,C,qB;I;I,S,iB,K;Q,I,S,O,Q,a,I,Q;Q,mB,S,iB,K;Y,I,U,Q,C,kB,Q,O;Y,I,O,U,Y,M,I,U;Y,I,O,W,a;gB,I,O,G,C,Q,O,O,G,C;gB,O,G,C,O;Y;Y,S;gB,O,W,O,W,gB,I,E,W;Y;Y,Q,S,G,O,M,C,M,S,E;gB,a;oB,O;oB,Y;oB,U;oB,c;gB;Y;Y,O,gB,S;Q;Q,O,iB;I;I,S,uB,K;Q,I,U,K,G,M,I,e;Q,O;I;I,S,2B,K,E,I;Q,I,Q,C,O,S,Y,O,S,U,G,O;a,I,S,K,G,M,I,U;Q,O,uB;I;I,S,a,O;Q,I,4B;Q,O,S;Y,I,Q,gB,U;Y,I,2B;gB,I,Y,gB,I,E,W;gB,S,Q,S,C,O,W;Y,O,S,M,K,C,I,E;Y,O,2B,I,E;Q;I;I,S,e,M,E,Q;Q,M,C,O,S,C,c,C,I,C,Q,U;Y,S,gB;Y,I,W,M;Q;Q,O;I;I,S;Q,I,O,Y,e,Q,G,E,O,Q,G,C,I;a,O,S,K,M,E,Q,E,Q;Y,I,O,e,Q;Y,I,C,M;Y,I,O,O,wB,C,M;Y,I,K,G,E,O,K,G,C,I,C,U,M,G,I,S;Y,O,K,K;Q;Q,O,K,K,C,I,E;I;I,S,4B,C,E,M;Q,I,C,G;Q,I,O,M,U,O,kB,G;Q,I,I,O,S,C,Q,C,I,C,G,K,C,G;Q,I,M,Y,E,W,E,I,E,W,C,I;Q,I,M,S,M,O,O,M,I,C;Q,I,M,e,2C,I,C,I,O,kB,G;I;I,S,kB,G,E,G;Q,I,O,Q,M,I,M,E,M,I,M;Q,I,I,I,G,O,I,M,M,I,K,I,I,C,E,G,G,C,E;Q,O;I;I,S,2B,C,E,c;Q,I,K,O,W,e,C,C,O,Q,C,I,C,C,a;Q,I,C,I;Y,I,M,O,C,M,C,K,4B,E,K,kB,K,O,E,M,K,U;gB,I,I,I;gB,I,I;gB,I,I,Y;gB,O;oB,G;oB,G;wB,I,K,E,M,E,O;4B,M;wB;wB,O;4B,M;4B,O,C,C,I;wB;oB;oB,G,S,C;wB,M;oB;oB,G;gB;Y;Y,M,I,U;Q;Q,I,mB,M,S,O;Q,O;Y,G;gB,K,G,I,C;Y;Y,G;gB,I,O,G,I;gB,mB,K,I;gB,O;Y;Y,G,S,C;gB,S;gB,M;Y;Y,G;gB,I;oB,I,C,oB,G,M,I,M,G,M;gB,S;oB,I,Q,M;gB;Y;Q;I;I,S,a,K,E,I;Q,I,O,U,Y,U,M,O;Q,I,O,K,C,O,W,C;Q,I,S,W;Y,I,M,K,I,C,O,Q;Y,I,O,Q,U,O;Y,M,I,U;Q;Q,O,A,C,S,W,S,M,E;I;I,S,e,G;Q,I,M,a,K;Q,O,O,Q,W,M,O;I;ICAA,IAAMA,eAAeC,OAAOC,MAAM,CAAC,OAAnC,uBAAA;I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","sources":["node_modules/socket.io/client-dist/socket.io.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/@socket.io/component-emitter/index.mjs","node_modules/socket.io/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io/build/esm/url.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io/build/esm/on.js","node_modules/socket.io/build/esm/socket.js","node_modules/socket.io/build/esm/contrib/backo2.js","node_modules/socket.io/build/esm/manager.js","node_modules/socket.io/build/esm/index.js"],"sourcesContent":[null,"const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","socket","value","onError","_get","_getPrototypeOf","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","alphabet","map","seed","prev","num","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","_Transport","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","get","poll","total","doPoll","_this3","_this4","_this5","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","_extends","Request","_this6","req","method","xhrStatus","_this7","pollXhr","_this8","_this9","_a","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","_typeof","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","destroy","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subEvents","subs","onpacket","_readyState","_len2","_key2","retries","fromQueue","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","_len3","_key3","emitWithAck","_len4","_key4","withErr","reject","arg1","arg2","tryCount","pending","hasError","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","_iterator","_createForOfIteratorHelper","_step","s","listener","f","sent","_len6","_key6","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","_iterator2","_step2","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","active","_destroy","_i","_nsps","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex"],"version":3,"file":"index.2c842153.js.map","sourceRoot":"/__parcel_source_root/"}